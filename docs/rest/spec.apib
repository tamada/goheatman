FORMAT: 1A

# goheatman REST API

# Entry point of Heatmap [/api/heatmap{?pixel,color,header,additional_line_gap}]

## Create heatmap [POST]

* This endpoint throws errors by the following case:
    * The user gives the pixel size `pixel` was less equal than 0. (400)
    * The user gives `color` to unknown color type (400)
    * The user gives `header` to unknown header type (400).
    * The user gives `additional_line_gap` on not integer value.

+ Parameters
    + pixel (number,optional) - specifies pixel size of each cell.
        * Default: 5
    + color (string,optional) - specifies color of creating heatmap.
        * Default: default
    + header (string,optional) - specifies header type of gives CSV data by form param.
        * Available: both, column, row, and no.
        * Default: no
    + additional_line_gap (number,optional) -  specifies the gap of additional line for cells. If the value was less equals than 0, no additional lines were drawn.
        * Default: 0
        
+ Response 201
    + Attributes (heatmap)

+ Response 400 (application/json)
    + Attributes (errors)

## get information of created heatmaps [GET]

+ Response 200 (application/json)
    + Attributes (heatmaps)

# Heatmap [/api/heatmap/{id}]

## get information of a heatmap [GET]

+ Parameters
    * `id` (number,required) - specifies id number for identifying the created heatmap.

+ Response 200 (application/json)
    + Attributes (heatmap)

+ Response 404 (application/json)
    + Attributes (error_not_found)

+ Response 400 (application/json)
    + Attributes (error_invalid)


# Heatmap image [/api/heatmap/{id}/raw]

## get heatmap image of specified heatmap [GET]

Returns heatmap image.

+ Parameters
    + `id` (number,required) - specifies id number for identifying the created heatmap.

+ Response 200 (image/png)

+ Response 404 (application/json)
    + Attributes (error_not_found)

+ Response 400 (application/json)
    + Attributes (error_invalid)

# Gives data for heatmap  [/api/heatmap/{id}/data]

## get data for heatmap [GET]

* Returns csv data for heatmap.
* If heatmap for identified by `{id}` was not found, or has been expired, this service respond `404`
* 

+ Parameters
    + `id` (number,required) - specifies id number for identifying the created heatmap.

+ Response 200 (application/csv)

+ Response 404 (application/json) 
    + Attributes (error_not_found)

+ Response 400 (application/json)
    + Attributes (error_invalid)

# Data structure

## parameter (object)

+ Attributes
  + color: default (string) - heatmap color type. (available: "default" or "gray")
  + pixel: 15 (number) - the pixel size of each cell. (default: 15)
  + header: both (string) - header type of given csv file. (available: "both", "column", "row", and "no". default: "no")
  + additional_line_gap: 0 (number) - the gap of additional lines per cells.

## heatmap (object)

+ id: 123456 (number) - id for heatmap
+ expired: `2019-06-20T12:00:34` (string) - expire date of the heatmap
+ parameter: (parameter) - parameter for creating heatmp.
+ data_url: `/api/heatmap/123456/data` (string) - url of data for heatmap.
+ image_url: `/api/heatmap/123456/raw` (string) - url of heatmap image.

## heatmaps (object)

+ heatmaps (array,fixed-type)
    + (heatmap)

## errors (object)

+ errors (array)
    + (error)
    
## error

+ message: content (string) - error message.

## `error_not_found`

+ message: {id}: not found, or has been expired (string) - error message

## `error_invalid`

+ message: {id}: invalid id format (string) - error message

